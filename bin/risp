#! /usr/bin/env bash

set -CEeo pipefail
IFS=$'\n\t'
shopt -s extdebug

DIR="$(dirname "$(readlink -f "$0")")"

USAGE=$(cat <<-END
    Usage:

    ./risp <expression>

    ./risp -f <path-to-file>
END
)

TEMPLATE=$(cat <<-END
    use risp::risp;

    fn main() {
      let result = risp! {
        expression
      };

      println!("{}", result);
    }
END
)

SOUND="${DIR}/../media/compile.wav"

eval_expression() {
  local expression="$1"
  local src

    (aplay -q -d 8 "$SOUND")&
    echo "Reading code..."
    echo ""
    sleep 2
    echo "Crunching numbers..."
    echo ""
    sleep 2
    echo "Beep boop beep boop..."
    echo ""
    sleep 2
    echo "This is taking forever :'("
    echo ""
    sleep 2
    echo "Oh wow it's done!"
    echo ""

  (
    cd /tmp
    if [ -d tmp-risp ]; then
      cd tmp-risp
    else
      cargo new tmp-risp
      cd tmp-risp
      gawk -i inplace '{ gsub(/\[dependencies\]/, "[dependencies]\nrisp = { git = \"https://github.com/MainShayne233/risp\" }"); print $0 }' /tmp/tmp-risp/Cargo.toml
    fi

    rm src/main.rs
    echo "$TEMPLATE" | sed "s/expression/$expression/" > src/main.rs
    cargo run -q
  )
}

main() {
  local expression
  if [ "$#" -eq 2 ] && [ "$1" = "-f" ] && [ -f "$2" ]; then
    expression=$(cat "$2")
  elif [ "$#" -eq 1 ]; then
    expression=$(echo "$1")
  else
    echo "$USAGE" 1>&2
    exit 1
  fi

  eval_expression "$expression"
}


main "$@"
